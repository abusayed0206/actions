name: Sync Trakt to Letterboxd

on:
  schedule:
    - cron: "50 16 * * 6"  # Runs every Saturday at 16:50 UTC
  workflow_dispatch:  # Allows manual trigger

jobs:
  sync-movies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install pandas requests


      - name: Run script to fetch and convert data
        env:
          TRAKT_API_KEY: ${{ secrets.TRAKT_API_KEY }}
          TRAKT_USERNAME: ${{ secrets.TRAKT_USERNAME }}
        run: python scripts/letterboxd_movies.py

      - name: Upload and Notify
        run: |
          python <<EOF
          import requests
          import os
          import json

          def upload_to_worker(csv_filepath):
              auth_key = os.getenv("X_AUTH_KEY")
              with open(csv_filepath, 'rb') as f:
                  files = {'file': (os.path.basename(csv_filepath), f, 'application/csv')}
                  headers = {'x-auth-key': auth_key}
                  response = requests.post("https://sharexworker.abusayed.dev/upload", files=files, headers=headers)
                  if response.status_code == 200:
                      data = response.json()
                      image_url = data.get("image")
                      if image_url:
                          print(f"File uploaded successfully. Image URL: {image_url}")
                          if not image_url.endswith(".csv"):
                              image_url = image_url + ".csv"
                          return image_url
                      else:
                          print(f"Error: No image URL in response. {response.text}")
                  else:
                      print(f"Error uploading file: {response.status_code} - {response.text}")
                  return None

          def send_telegram_notification(image_url):
              bot_token = os.getenv("TELEGRAM_BOT_TOKEN")
              chat_id = os.getenv("TELEGRAM_CHAT_ID")
              message = f"Letterboxd CSV readyðŸŽ‰\\nDownload [here]({image_url})\\nLetterboxd Import Page Link https://letterboxd.com/import/"
              url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
              payload = {
                  "chat_id": chat_id,
                  "text": message,
                  "parse_mode": "Markdown"
              }
              response = requests.post(url, data=payload)
              if response.status_code != 200:
                  print(f"Error sending notification: {response.status_code}")

          csv_filepath = "files/letterboxd.csv"
          image_url = upload_to_worker(csv_filepath)
          if image_url:
              send_telegram_notification(image_url)
          EOF
        env:
          X_AUTH_KEY: ${{ secrets.X_AUTH_KEY }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add files/letterboxd.csv files/minor_version.txt
          git commit -m "Updated Letterboxd movie list" || echo "No changes to commit"
          git push
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}